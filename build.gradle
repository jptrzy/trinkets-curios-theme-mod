plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenCentral()

	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "Ladysnake Libs"
		url = "https://ladysnake.jfrog.io/artifactory/mods"
	}
	maven {
		url = "https://maven.shedaniel.me/"
	}
	maven{
		url = "https://maven.terraformersmc.com/releases/"
	}
	maven {
		url "https://cursemaven.com"
	}
	maven {
		url = "https://jitpack.io"
	}
}

ext {
	lwjglVersion = '3.3.1'
	imguiVersion = '1.86.3'
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "dev.emi:trinkets:${trinkets_version}"

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
//	modCompileOnly "curse.maven:inventorio-491073:${project.inventorio_cf_version_id}"
	modCompileOnly "curse.maven:scout-631922:${project.scout_cf_version_id}"


	// IMGUI

//	if ( Boolean.getBoolean("debug") ) { // -Ddebug=true
	implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

	['', '-opengl', '-glfw'].each {
		implementation "org.lwjgl:lwjgl$it:$lwjglVersion"
//			implementation "org.lwjgl:lwjgl$it::natives-windows"
		implementation "org.lwjgl:lwjgl$it::natives-linux"
	}

	implementation "io.github.spair:imgui-java-binding:$imguiVersion"
	implementation "io.github.spair:imgui-java-lwjgl3:$imguiVersion"

//		implementation "io.github.spair:imgui-java-natives-windows:$imguiVersion"
	implementation "io.github.spair:imgui-java-natives-linux:$imguiVersion"


//	["gl", "glfw", "core"].each {
//		implementation "com.github.kotlin-graphics.imgui:$it:v1.79"
//	}
//
//	implementation "com.github.kotlin-graphics:uno-sdk:jdk8-SNAPSHOT"
//	implementation "com.github.kotlin-graphics:glm:jdk8-SNAPSHOT"
//	implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.4.10'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

loom {
	accessWidenerPath = file("src/main/resources/trinkets-curios-theme.accesswidener")
}
